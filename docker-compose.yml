version: '4'

services:
  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    command:
      - --log.level=INFO
      - --api.dashboard=true
      - --providers.docker=true
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443

      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=${EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/etc/letsencrypt/live/petrolette.space"
    labels:
      - traefik.http.routers.to-https.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.to-https.entrypoints=http
      - traefik.http.routers.to-https.middlewares=to-https
      
      - traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.entrypoints=https
      - traefik.http.routers.dashboard.middlewares=auth
      - traefik.http.routers.dashboard.tls=true
      - traefik.http.routers.dashboard.tls.certresolver=letsencrypt
     
      - traefik.http.middlewares.to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_USER}:${TRAEFIK_PASSWORD_HASH}

  petrolette:
    image: petrolette
    build:
      dockerfile: petrolette.Dockerfile
      context: .
    labels:
      - traefik.http.services.petrolette.loadbalancer.server.port=8000
      - traefik.http.routers.petrolette.rule=Host(`petrolette.${DOMAIN}`)
      - traefik.http.routers.petrolette.entrypoints=https
      - traefik.http.routers.petrolette.tls=true
      - traefik.http.routers.petrolette.tls.certresolver=letsencrypt
